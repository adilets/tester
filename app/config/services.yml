# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    utility_path: '%kernel.root_dir%/../utility'
    chroot_path: '/var/chroot'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    admin.user:
        class: AppBundle\Admin\UserAdmin
        arguments: [~, AppBundle\Entity\User, ~]
        calls:
            - [setUserManager, ["@fos_user.user_manager"]]
        tags:
            - { name: sonata.admin, manager_type: orm, label: User }
        public: true

    admin.university:
        class: AppBundle\Admin\UniversityAdmin
        arguments: [~, AppBundle\Entity\University, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: University }
        public: true

    admin.group:
        class: AppBundle\Admin\GroupAdmin
        arguments: [~, AppBundle\Entity\Group, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Group }
        public: true

    admin.problem:
        class: AppBundle\Admin\ProblemAdmin
        arguments: [~, AppBundle\Entity\Problem, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Problem }
        public: true

    admin.tournament:
        class: AppBundle\Admin\TournamentAdmin
        arguments: [~, AppBundle\Entity\Tournament, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tournament }
        public: true

    admin.language:
        class: AppBundle\Admin\LanguageAdmin
        arguments: [~, AppBundle\Entity\Language, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Language }
        public: true

    admin.status:
        class: AppBundle\Admin\StatusAdmin
        arguments: [~, AppBundle\Entity\Status, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Status }
        public: true

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    app.service.problem:
        public: true
        class: AppBundle\Service\Problem
        arguments: ['@service_container']

    app.eventlistener.subscriber:
        public: true
        class: AppBundle\EventListener\Subscriber
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    app.topic.chat:
        class: AppBundle\Topic\TesterTopic
        tags:
            - { name: gos_web_socket.topic }

    app.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    app.admin.topic:
        class: AppBundle\Admin\TopicAdmin
        arguments: [~, AppBundle\Entity\Topic, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Topic }
        public: true

    app.admin.news:
        class: AppBundle\Admin\NewsAdmin
        arguments: [~, AppBundle\Entity\News, SonataAdminBundle:CRUD]
        tags:
            - { name: sonata.admin, manager_type: orm, label: News }
        public: true